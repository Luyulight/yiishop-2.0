<?php
/**
 * Created by PhpStorm.
 * User: User
 * Date: 2017/6/4
 * Time: 10:57
 */

namespace app\modules\models;

//use app\models\ContactForm;
use yii\db\ActiveRecord;
use Yii;

class Admin extends ActiveRecord
{
    public $rememberMe = true;
    public $repass;
    public static function tableName()
    {
       return "{{%admin}}";
        // return parent::tableName(); // TODO: Change the autogenerated stub
    }

    /*
     * 自定义属性标签
     **/
    public function attributeLabels()
    {
        return [
            'adminuser' => '管理员账号',
            'adminemail' => '管理员邮箱',
            'adminpass' => '管理员密码',
            'repass' => '确认密码',
        ];
    }

    public function  rules()
    {
        // 可选项，用于指定在场景（scenario）中，需要启用该规则
        // 若不提供，则代表该规则适用于所有场景
        // 若你需要提供除了某些特定场景以外的所有其他场景，你也可以配置 "except" 选项

        return [
            ['adminuser','required','message'=>'管理员账号不能为空','on'=>['login','seekpass','changepass','adminadd','changeemail']],
            ['adminpass','required','message'=>'管理员密码不能为空','on'=>['login','changepass','adminadd','changeemail']],
            ['rememberMe','boolean','on'=>'login'],
            ['adminpass','validatePass','on'=>['login','changeemail']],
            ['adminemail', 'required', 'message' => '电子邮箱不能为空', 'on' => ['seekpass', 'adminadd', 'changeemail']],
            ['adminemail', 'email', 'message' => '电子邮箱格式不正确', 'on' => ['seekpass', 'adminadd', 'changeemail']],
            ['adminemail', 'unique', 'message' => '电子邮箱已被注册', 'on' => ['adminadd', 'changeemail']],
            ['adminuser', 'unique', 'message' => '管理员名称已被注册', 'on' => 'adminadd'],
            ['repass','compare','compareAttribute'=>'adminpass','message'=>'两次输入密码不一致','on'=>['changepass','adminadd']],
            ['repass', 'required', 'message' => '确认密码不能为空', 'on' => ['changepass','adminadd']],
            ['createtime', 'required', 'message' => '确认密码不能为空', 'on' => ['adminadd']],
        ];
    }

    //验证密码
    public function validatePass()
    {
        if(!$this->hasErrors()){
            $data = self::find()->where('adminuser = :user and adminpass = :pass',[':user'=>$this->adminuser,':pass'=>md5($this->adminpass)])->one();
            if(is_null($data)){
                $this->addError('adminpass','用户名或密码错误');
            }
        }
    }

    //验证邮箱
    public function validateEmail()
    {
        if(!$this->hasErrors()){
            $data = self::find()->where('adminuser = :user and adminemail = :email',[':user'=>$this->adminuser,':email'=>$this->adminemail])->one();
            if(is_null($data)){
                $this->addError('adminemail','账号邮箱不匹配');
            }
        }
    }

    /**
     * 登录操作
    */
    public function login($data)
    {
        $this->scenario = 'login';
        if($this->load($data) && $this->validate()) {
            // 若所有输入都是有效的
            $lifetime = $this->rememberMe ? 24*3600 : 0;
            $session = Yii::$app->session;
            session_set_cookie_params($lifetime);
            $session['admin'] = [
                'adminuser' => $this->adminuser,
                'isLogin' => 1,
            ];
//            $ip  = ip2long(Yii::$app->request->userIP);
//            dd($ip);
            $this->updateAll(['logintime'=>time(),'loginip'=>ip2long(Yii::$app->request->userIP)], 'adminuser = :user',[':user'=>$this->adminuser]);
            return (bool)$session['admin']['isLogin'];

        }else{
            // 有效性验证失败：$errors 属性就是存储错误信息的数组
//            $model = new \app\models\ContactForm;
//            $errors = $model->errors;
            return false;
        }
    }

    /**
     * @return boolean
     * 找回密码
     */
    public function seekPass($data)
    {
        $this->scenario = 'seekpass';
        if($this->load($data) && $this->validate()) {
            // 若所有输入都是有效的
            $time = time();
            $token = $this->createToken($data['Admin']['adminuser'], $time);
            $mailer = Yii::$app->mailer->compose('seekpass', ['adminuser' => $data['Admin']['adminuser'], 'time' => $time, 'token' => $token]);
            $mailer->setFrom("imooc_shop@163.com");
            $mailer->setTo($data['Admin']['adminemail']);
            $mailer->setSubject("yii商城-找回密码");
            if ($mailer->send()) {
//                p($mailer);
                return true;
            }

        }else{
            // 有效性验证失败：$errors 属性就是存储错误信息的数组
//            $model = new \app\models\ContactForm;
//            $errors = $model->errors;
            return false;
        }
    }

    /*
     * 生成token
     */
    public function createToken($adminuser, $time)
    {
        return md5(md5($adminuser).base64_encode(Yii::$app->request->userIP).md5($time));
    }

    /*
     * 更改管理员密码
     * */
    public function changePass($data)
    {
        $this->scenario = "changepass";
        if($this->load($data) && $this->validate()){
            return (bool) $this->updateAll(['adminpass'=>md5($this->adminpass)],'adminuser = :user',[':user'=>$this->adminuser]);
        }
        return false;
    }

    /*
     * 添加管理员
     */
    public function reg($data)
    {
        $this->scenario = 'adminadd'; 
        $data['Admin']['createtime'] = time();
        if($this->load($data) && $this->validate()){
            $this->adminpass = md5($this->adminpass);
            // $this->createtime  = time(); // 为什么这么写? 往$data里面拼接数据没用

            // p($data);

            if($this->save(false)){
                return ture;
            }
            return false;
        }else{
            return false;
        }
    }

    /*
     * 更改管理员邮箱
     * */
    public function changeEmail($data)
    {
        $this->scenario = 'changeemail';
        if($this->load($data) && $this->validate()){
            return (bool)$this->updateAll(['adminemail'=>$this->adminemail],'adminuser = :user ',[':user'=>$this->adminuser]);
        }
        return false;
    }

}